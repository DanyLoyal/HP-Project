// <auto-generated />
using System;
using HP_Backend.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace HP_Backend.Migrations
{
    [DbContext(typeof(XdcCpqContext))]
    [Migration("20241106135642_SeedRelatedEntities")]
    partial class SeedRelatedEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("HP_Backend.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Email = "alice.johnson@example.com",
                            Name = "Alice Johnson"
                        },
                        new
                        {
                            CustomerId = 2,
                            Email = "bob.smith@example.com",
                            Name = "Bob Smith"
                        },
                        new
                        {
                            CustomerId = 3,
                            Email = "sdasda@sadasd.com",
                            Name = "Charlie Brown"
                        });
                });

            modelBuilder.Entity("HP_Backend.Models.Product", b =>
                {
                    b.Property<int>("ProductID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductID"));

                    b.Property<decimal>("AnnualPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("MonthlyPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductID");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductID = 1,
                            AnnualPrice = 159.99m,
                            Description = "License for Product A",
                            MonthlyPrice = 15.99m,
                            Name = "Product A"
                        },
                        new
                        {
                            ProductID = 2,
                            AnnualPrice = 259.99m,
                            Description = "Subscription for Product B",
                            MonthlyPrice = 25.99m,
                            Name = "Product B"
                        },
                        new
                        {
                            ProductID = 3,
                            AnnualPrice = 109.99m,
                            Description = "License for Product C",
                            MonthlyPrice = 10.99m,
                            Name = "Product C"
                        },
                        new
                        {
                            ProductID = 4,
                            AnnualPrice = 209.99m,
                            Description = "Subscription for Product D",
                            MonthlyPrice = 20.99m,
                            Name = "Product D"
                        },
                        new
                        {
                            ProductID = 5,
                            AnnualPrice = 59.99m,
                            Description = "License for Product E",
                            MonthlyPrice = 5.99m,
                            Name = "Product E"
                        },
                        new
                        {
                            ProductID = 6,
                            AnnualPrice = 309.99m,
                            Description = "Subscription for Product F",
                            MonthlyPrice = 30.99m,
                            Name = "Product F"
                        },
                        new
                        {
                            ProductID = 7,
                            AnnualPrice = 129.99m,
                            Description = "License for Product G",
                            MonthlyPrice = 12.99m,
                            Name = "Product G"
                        },
                        new
                        {
                            ProductID = 8,
                            AnnualPrice = 359.99m,
                            Description = "Subscription for Product H",
                            MonthlyPrice = 35.99m,
                            Name = "Product H"
                        },
                        new
                        {
                            ProductID = 9,
                            AnnualPrice = 89.99m,
                            Description = "License for Product I",
                            MonthlyPrice = 8.99m,
                            Name = "Product I"
                        });
                });

            modelBuilder.Entity("HP_Backend.Models.QuoteItem", b =>
                {
                    b.Property<int>("QuoteItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuoteItemID"));

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<int>("ProductID")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("QuoteID")
                        .HasColumnType("int");

                    b.HasKey("QuoteItemID");

                    b.ToTable("QuoteItems");
                });

            modelBuilder.Entity("HP_Backend.Models.Quotes", b =>
                {
                    b.Property<int>("QuoteID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuoteID"));

                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<DateTime>("QuoteDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18, 2)");

                    b.HasKey("QuoteID");

                    b.ToTable("Quotes");
                });
#pragma warning restore 612, 618
        }
    }
}
